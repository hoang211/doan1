
@{
    Layout = "";
}

<div ng-app="app" class="form-group" ng-controller="ctrl">

    <div class="form-group">
        Loại sản phẩm
        <div class="">
            <select style="width:1000px;" class="" ng-model="products.CategoryName" ng-options="x as x.CategoryName for x in datas">
            </select>
        </div>
        <br />
        <br />
    </div>
    <div class="col-md-10">
        <input type="file" multiple="multiple" ngf-select="FileUpload($files)" />
        <hr />
        Ảnh đã chọn:
        <ul>
            <li ng-repeat="file in SelectedFiles">
                <img style="width:100px;height:100px;" src="~/FileUpload/files/{{file.name}}" />
                <br />
            </li>
        </ul>
        <div id="dvProgress" class="progress" ng-show="Progress >= 0">
        </div>
    </div>

    <div class="col-md-10">
        <h2>Thu nghiem CKeditor</h2>
        <textarea ng-model="data" ckeditor="minimal">

        </textarea>
        <div>{{data}}</div>
        <textarea ng-model="data2" ckeditor>

        </textarea>
        <div>{{data2}}</div>
    </div>
    <br />
</div>

<script src="~/Scripts/angular.min.js"></script>
<script src="//cdn.ckeditor.com/4.5.7/full/ckeditor.js"></script>
<script src="//cdn.ckeditor.com/4.5.7/full/adapters/jquery.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ng-ckeditor/0.2.1/ng-ckeditor.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/danialfarid-angular-file-upload/12.2.13/ng-file-upload.min.js"></script>
<script type="text/javascript">
    var myapp = angular.module('app', ['ngFileUpload', "ngCkeditor"])
    myapp.controller('ctrl', function ($scope, Upload, $timeout, $http) {

        $http({
            url: "/AdminCP/ProductsCategories/GetAllData",
            method: "GET"
        }
        ).then(function (res) {
            $scope.datas = res.data;
        });


        $scope.UploadFiles = function (files) {
            $scope.SelectedFiles = files;
            if ($scope.SelectedFiles && $scope.SelectedFiles.length) {
                Upload.upload({
                    url: '/Admin/Products/Uploadfiles',
                    data: {
                        files: $scope.SelectedFiles
                    }
                }).then(function (response) {
                    $timeout(function () {
                        $scope.Result = response.data;
                    });
                }, function (response) {
                    if (response.status > 0) {
                        var errorMsg = response.status + ': ' + response.data;
                        alert(errorMsg);
                    }
                }, function (evt) {
                    var element = angular.element(document.querySelector('#dvProgress'));
                    $scope.Progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));
                    element.html('<div style="width: ' + $scope.Progress + '%">' + $scope.Progress + '%</div>');
                }
                );
            }

        };

    });
    CKEDITOR.plugins.addExternal('simpleuploads', '/js/ckeditor/plugins/simpleuploads/plugin.js');
    CKEDITOR.plugins.addExternal('imagesfromword', '/js/ckeditor/plugins/imagesfromword/plugin.js');
    myapp.directive('ckeditor', function () {
        return {
            require: 'ngModel',
            link: function (scope, element, attr, ngModel) {
                var editorOptions;
                if (attr.ckeditor === 'minimal') {
                    // minimal editor
                    editorOptions = {
                        height: 100,
                        toolbar: [
                            { name: 'basic', items: ['Bold', 'Italic', 'Underline'] },
                            { name: 'links', items: ['Link', 'Unlink'] },
                            { name: 'tools', items: ['Maximize'] },
                            { name: 'document', items: ['Source'] },
                        ],
                        //removePlugins: 'elementspath',
                        //resize_enabled: false
                    };
                }

                else {
                    if (attr.ckeditor === 'regular') {
                        // regular editor
                        editorOptions = {
                            filebrowserImageUploadUrl: $rootScope.globals.apiUrl + '/upload',
                            removeButtons: 'About,Form,Checkbox,Radio,TextField,Textarea,Select,Button,ImageButton,HiddenField,Save,CreateDiv,Language,BidiLtr,BidiRtl,Flash,Iframe,addFile,Styles',
                            extraPlugins: 'simpleuploads,imagesfromword'
                        };
                    } else {

                        editorOptions = {
                            height: 100,
                            toolbar: [
                                { name: 'document', items: ['NewPage', 'Preview'] },
                                { name: 'clipboard', items: ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo'] },
                                { name: 'editing', items: ['Find', 'Replace', '-', 'SelectAll', '-', 'Scayt'] },
                                { name: 'insert', items: ['Image', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe'] },

                                { name: 'styles', items: ['Styles', 'Format'] },
                                { name: 'basicstyles', items: ['Bold', 'Italic', 'Strike', '-', 'RemoveFormat'] },
                                { name: 'paragraph', items: ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote'] },
                                { name: 'links', items: ['Link', 'Unlink', 'Anchor'] },
                                { name: 'tools', items: ['Maximize', '-', 'About'] },

                                { name: 'color', items: ['Link', 'Unlink', 'Anchor'] },
                                { name: 'other', items: ['Maximize', '-', 'About'] }
                            ]

                        };
                    }


                }

                // enable ckeditor
                var ckeditor = element.ckeditor(editorOptions);

                // update ngModel on change
                ckeditor.editor.on('change', function () {
                    ngModel.$setViewValue(this.getData());
                });
            }
        };

    });

</script>